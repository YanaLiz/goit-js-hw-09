{"mappings":"YACA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,WAAYL,SAASC,cAAc,0BAIrCH,EAAKC,KAAKO,iBAAiB,SAAS,SAAAC,GAClC,IAAIC,EAAQC,SAASX,EAAKI,MAAMQ,OAC1BP,EAAOM,SAASX,EAAKK,KAAKO,OAC1BN,EAASK,SAASX,EAAKM,OAAOM,OACpCZ,EAAKO,WAAWC,iBAAiB,SAAS,SAAAK,GAExC,SAASC,EAAcC,EAAUX,GAC/B,OAAO,IAAIY,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUX,UAEpBc,EAAO,CAAEH,WAAUX,S,GAEpBA,E,IAXPS,EAAIU,iBAeJ,IAAK,IAAIC,EAAI,EAAGA,GAAKlB,EAAQkB,GAAK,EAChCV,EAAcU,EAAGd,GAAOe,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUX,EAAKsB,EAALtB,MACxCuB,QAAQC,IAAI,uBAAwCC,OAAfd,EAAS,QAAYc,OAANzB,EAAM,M,IAEzD0B,OAAM,SAAAJ,G,IAAGX,EAAQW,EAARX,SAAUX,EAAKsB,EAALtB,MACpBuB,QAAQC,IAAI,sBAAqCC,OAAfd,EAAS,QAAYc,OAANzB,EAAM,M,IAExDM,GAASL,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst refs = {\n  form: document.querySelector('form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  btnPromise: document.querySelector('button[type=\"submit\"]'),\n};\n\n\nrefs.form.addEventListener('input', evt => {\n  let delay = parseInt(refs.delay.value);\n  const step = parseInt(refs.step.value);\n  const amount = parseInt(refs.amount.value);\n  refs.btnPromise.addEventListener('click', evt => {\n    evt.preventDefault();\n    function createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n\n        setTimeout(() => {\n          if (shouldResolve) {\n            resolve({ position, delay });\n          } else {\n            reject({ position, delay });\n          }\n        }, delay);\n      });\n    }\n\n    for (let i = 1; i <= amount; i += 1) {\n      createPromise(i, delay).then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n        .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      (delay += step);\n    }\n  });\n});"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","btnPromise","addEventListener","evt1","delay1","parseInt","value","evt","createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","preventDefault","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.8a37e440.js.map"}